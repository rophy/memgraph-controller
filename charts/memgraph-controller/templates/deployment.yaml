apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "memgraph-controller.fullname" . }}
  labels:
    {{- include "memgraph-controller.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "memgraph-controller.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "memgraph-controller.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "memgraph-controller.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: APP_NAME
          value: {{ .Values.env.APP_NAME | quote }}
        - name: NAMESPACE
          value: {{ .Values.env.NAMESPACE | quote }}
        - name: RECONCILE_INTERVAL
          value: {{ .Values.env.RECONCILE_INTERVAL | quote }}
        - name: BOLT_PORT
          value: {{ .Values.env.BOLT_PORT | quote }}
        - name: SERVICE_NAME
          value: {{ .Values.env.SERVICE_NAME | quote }}
        - name: HTTP_PORT
          value: {{ .Values.env.HTTP_PORT | quote }}
        - name: STATEFULSET_NAME
          value: {{ .Values.env.STATEFULSET_NAME | default "memgraph" | quote }}
        # Leader election environment variables
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        {{- if .Values.gateway.enabled }}
        # Gateway configuration
        - name: GATEWAY_ENABLED
          value: {{ .Values.gateway.enabled | quote }}
        - name: GATEWAY_BIND_ADDRESS
          value: {{ .Values.gateway.bindAddress | quote }}
        - name: GATEWAY_MAX_CONNECTIONS
          value: {{ .Values.gateway.maxConnections | quote }}
        - name: GATEWAY_TIMEOUT
          value: {{ .Values.gateway.timeout | quote }}
        - name: GATEWAY_BUFFER_SIZE
          value: {{ .Values.gateway.bufferSize | quote }}
        - name: GATEWAY_HEALTH_CHECK_INTERVAL
          value: {{ .Values.gateway.healthCheckInterval | quote }}
        - name: GATEWAY_CONNECTION_TIMEOUT
          value: {{ .Values.gateway.connectionTimeout | quote }}
        - name: GATEWAY_IDLE_TIMEOUT
          value: {{ .Values.gateway.idleTimeout | quote }}
        - name: GATEWAY_MAX_BYTES_PER_CONNECTION
          value: {{ .Values.gateway.maxBytesPerConnection | quote }}
        - name: GATEWAY_CLEANUP_INTERVAL
          value: {{ .Values.gateway.cleanupInterval | quote }}
        - name: GATEWAY_TLS_ENABLED
          value: {{ .Values.gateway.tls.enabled | quote }}
        - name: GATEWAY_TLS_CERT_PATH
          value: {{ .Values.gateway.tls.certPath | quote }}
        - name: GATEWAY_TLS_KEY_PATH
          value: {{ .Values.gateway.tls.keyPath | quote }}
        - name: GATEWAY_RATE_LIMIT_ENABLED
          value: {{ .Values.gateway.rateLimit.enabled | quote }}
        - name: GATEWAY_RATE_LIMIT_RPS
          value: {{ .Values.gateway.rateLimit.rps | quote }}
        - name: GATEWAY_RATE_LIMIT_BURST
          value: {{ .Values.gateway.rateLimit.burst | quote }}
        - name: GATEWAY_RATE_LIMIT_WINDOW
          value: {{ .Values.gateway.rateLimit.window | quote }}
        - name: GATEWAY_LOG_LEVEL
          value: {{ .Values.gateway.logLevel | quote }}
        - name: GATEWAY_TRACE_ENABLED
          value: {{ .Values.gateway.traceEnabled | quote }}
        {{- end }}
        ports:
        {{- if .Values.statusApi.enabled }}
        - name: http
          containerPort: {{ .Values.statusApi.port }}
          protocol: TCP
        {{- else if .Values.health.port }}
        - name: http
          containerPort: {{ .Values.health.port }}
          protocol: TCP
        {{- end }}
        {{- if and .Values.metrics.enabled .Values.metrics.port }}
        - name: metrics
          containerPort: {{ .Values.metrics.port }}
          protocol: TCP
        {{- end }}
        {{- if .Values.gateway.enabled }}
        - name: gateway
          containerPort: 7687
          protocol: TCP
        {{- end }}
        {{- if .Values.health.port }}
        livenessProbe:
          httpGet:
            path: {{ .Values.health.path }}
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: {{ .Values.health.path }}
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        {{- if and .Values.gateway.enabled .Values.gateway.tls.enabled .Values.gateway.tls.secretName }}
        - name: tls-certs
          mountPath: /etc/certs
          readOnly: true
        {{- end }}
      volumes:
      - name: tmp
        emptyDir: {}
      {{- if and .Values.gateway.enabled .Values.gateway.tls.enabled .Values.gateway.tls.secretName }}
      - name: tls-certs
        secret:
          secretName: {{ .Values.gateway.tls.secretName }}
          defaultMode: 0444
      {{- end }}